/////////////////////////////////////////////////////////////////////////////////////////
#ifndef LIBRARY_HPP
#define LIBRARY_HPP
/////////////////////////////////////////////////////////////////////////////////////////
#include "stdafx.hpp"
#include "book.hpp"
#include "bdbook.hpp"
#include "reader.hpp"
/////////////////////////////////////////////////////////////////////////////////////////
enum e_act
{
    e_none,
    e_give,
    e_take,
    e_register
};
/////////////////////////////////////////////////////////////////////////////////////////
class Library
{
    //-----------------------------------------------------------------------------------
public:
    //-----------------------------------------------------------------------------------
    Library( const string& name_file_books, const string& name_file_readers );
    //-----------------------------------------------------------------------------------
    void request( const string& name_reader, e_act act, string name_book = {} );
    //-----------------------------------------------------------------------------------
    void request( Reader& reader, e_act act, string name_book = {} );
    //-----------------------------------------------------------------------------------
    void request( const Reader& reader, e_act act );
    //-----------------------------------------------------------------------------------
    const set< Book >& get_books() const;
    //-----------------------------------------------------------------------------------
    const std::vector< Reader >& get_readers() const;
    //-----------------------------------------------------------------------------------
    const Reader& get_reader( const string& name_reader ) const;
    //-----------------------------------------------------------------------------------
    void add_book( const string& name_book, const string name_author );
    //-----------------------------------------------------------------------------------
    void add_book( const Book& book );
    //-----------------------------------------------------------------------------------
    void remove_book( const string& name_book );
    //-----------------------------------------------------------------------------------
private:
    //-----------------------------------------------------------------------------------
    bool is_registered( const Reader& reader );
    //-----------------------------------------------------------------------------------
    BDbook BD;
    std::vector< Reader > readers;
    //-----------------------------------------------------------------------------------
};
/////////////////////////////////////////////////////////////////////////////////////////
#endif // LIBRARY_HPP
/////////////////////////////////////////////////////////////////////////////////////////
