/////////////////////////////////////////////////////////////////////////////////////////
#include "bdbook.hpp"
/////////////////////////////////////////////////////////////////////////////////////////
#define find( cont, expr ) std::find( cont.begin(), cont.end(), expr )
/////////////////////////////////////////////////////////////////////////////////////////
Book BDbook::get_book( const string& name_book )
{
    auto book = find( books, name_book );
    
    if( book == books.end() )
    {
        std::cout
            << "Book "
            << name_book
            << " not found"
            << std::endl;
    }
    
    auto ret = *book;
    
    books.erase( book );
    
    return ret;
}
/////////////////////////////////////////////////////////////////////////////////////////
void BDbook::add_book( const Book& book )
{
    books.emplace( book );
}
/////////////////////////////////////////////////////////////////////////////////////////
bool BDbook::contain( const string& name_book )
{
    return find( books, name_book ) != books.end();
}
/////////////////////////////////////////////////////////////////////////////////////////
set< Book >& BDbook::get_books_ref()
{
    return books;
}
/////////////////////////////////////////////////////////////////////////////////////////
const set< Book >& BDbook::get_books_cref() const
{
    return books;
}
/////////////////////////////////////////////////////////////////////////////////////////